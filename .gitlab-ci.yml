image: "ruby:3.0.1"

services:
  - postgres

variables:
  RAILS_ENV: test
  POSTGRES_ENABLED: "true"
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ""
  POSTGRES_DB: sijrscol_pru
  POSTGRES_HOST_AUTH_METHOD: trust
  NOKOGIRI_USE_SYSTEM_LIBRARIES: "true"


stages:
  - build
  - test

build:
  stage: build
  script:
    - apt-get update -yy && apt-get install build-essential libpq-dev postgresql-client -y
    - apt-get install -y -qq nodejs
    - ruby -v
    - which ruby
    - gem install bundler --no-document
    - bundle install --jobs $(nproc) "${FLAGS[@]}"
    - cp .env.gitlab .env
    - cp config/database.ci.yml config/database.yml
    - cp db/structure.sql db/structure.sql.copia 
    - sed -e 's/provider = libc,//g;s/SET default_table_access_method.*/-- &/g' db/structure.sql.copia > db/structure.sql 
    - which psql
    - psql -h postgres --set ON_ERROR_STOP=1 --no-psqlrc --file /builds/pasosdeJesus/si_jrscol/db/structure.sql sijrscol_pru
    #    - bin/rails db:drop db:create db:setup
    # bin/rails sip:indices
    #- yarn install

test:
  stage: test
  needs: [build]
  script:
    - CONFIG_HOSTS=www.example.com bin/rails test
