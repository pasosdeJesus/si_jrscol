# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
- deploy
- review
- dast
- staging
- canary
- production
- incremental rollout 10%
- incremental rollout 25%
- incremental rollout 50%
- incremental rollout 100%
- performance
- cleanup
sast:
  stage: test
include:
- template: Auto-DevOps.gitlab-ci.yml

# https://medium.com/@antongrigoriev_23292/playing-with-gitlab-ci-cd-configs-for-ruby-on-rails-test-and-deployment-5744485a9a0e

image: ruby:3.0
services:
  - postgres:12.2-alpine

.testing:
  stage: test
  variables:
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: ""
    POSTGRES_DB: sijrscol_pru
    POSTGRES_HOST_AUTH_METHOD: trust
    RAILS_ENV: test
    NOKOGIRI_USE_SYSTEM_LIBRARIES: true
  script:
    - nvm install node
    - apt-get update -yy && apt-get install build-essential libpq-dev -y
    - bundle install
    - bundle exec rails db:setup
    - yarn install
    - cp .env.gitlab .env
    - cp config/database.ci.yml config/database.yml
    - cp db/structure.sql db/structure.sql.copia 
    - sed -e 's/provider = libc,//g;s/SET default_table_access_method.*/-- &/g' db/structure.sql.copia > db/structure.sql 
    - bundle exec bin/rails db:setup
    - bundle exec bin/rails sip:indices
    - CONFIG_HOSTS=www.example.com bin/rails test

